"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IVoteraVote__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "getManager",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "proposalID",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "getValidatorAt",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "proposalID",
                type: "bytes32",
            },
        ],
        name: "getValidatorCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "proposalID",
                type: "bytes32",
            },
        ],
        name: "getVoteResult",
        outputs: [
            {
                internalType: "uint64[]",
                name: "",
                type: "uint64[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "proposalID",
                type: "bytes32",
            },
            {
                internalType: "bool",
                name: "useAssess",
                type: "bool",
            },
            {
                internalType: "uint64",
                name: "startVote",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "endVote",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "startAssess",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "endAssess",
                type: "uint64",
            },
        ],
        name: "init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_proposalID",
                type: "bytes32",
            },
        ],
        name: "isValidatorListFinalized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "proposalID",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "commitment",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "submitBallot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IVoteraVote__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IVoteraVote__factory = IVoteraVote__factory;
IVoteraVote__factory.abi = _abi;
